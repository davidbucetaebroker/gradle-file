version = new ProjectVersion(0,1)

ext.versionFile = file 'version.properties'

task loadVersion(){
	project.version = readVersion()
}

ProjectVersion readVersion(){

	logger.quiet 'Reading version file'
	
	if (!versionFile.exists()){
		throw new GradleException("Required version file does not exists: $versionFile.canonicalPath")
	}
	
	Properties versionProps = new Properties()
	
	versionFile.withInputStream { stream ->
		versionProps.load(stream)
	}
	
	new ProjectVersion(
		versionProps.major.toInteger(),
		versionProps.minor.toInteger(),
		versionProps.release.toBoolean()
	)
}


task first {
	doFirst{
		println "first"
	}
}

task second {
	doFirst{
		println "second"
	}
}

task third {
	doFirst{
		println "third"
	}
}

task printVersion (dependsOn: [second, first]){
	doLast{
		logger.quiet "Version: $version"
	}
}

third.dependsOn('printVersion')

class ProjectVersion{
	Integer major
	Integer minor
	Boolean release
	
	ProjectVersion(Integer major, Integer minor){
		this.major = major;
		this.minor = minor;
		this.release = Boolean.FALSE
	}
	
	ProjectVersion(Integer major, Integer minor, Boolean release){
		this(major, minor)
		this.release = release;
	}
	
	@Override
	String toString(){
		"$major.$minor.${release? 'RELEASE' : 'SNAPSHOT'}"
	}
}